{"version":3,"sources":["components/ContactsItem/ContactsItem.module.css","components/ContactsList/ContactsList.module.css","components/ContactsFilter/ContactsFilter.module.css","components/App/App.module.css","components/Form/Form.module.css","components/Form/Form.jsx","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.jsx","components/ContactsFilter/ContactsFilter.jsx","components/App/App.js","index.js"],"names":["module","exports","Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","css","form","this","type","pattern","title","required","onChange","id","input","button","Component","ContactsItem","onDeleteContact","item","item__button","onClick","ContactsList","contacts","list","map","contact","ContactsFilter","filter__label","App","filter","addContact","profile","prevState","find","toLowerCase","alert","deleteContact","onChangeFilter","getFilteredContacts","includes","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b5b4909.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__3IWol\",\"item__button\":\"ContactsItem_item__button__LEiU_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3NRQ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"ContactsFilter_filter__label__2DkrA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1Kd3Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3AtpA\",\"input\":\"Form_input__2n_k0\",\"button\":\"Form_button__2GSyj\"};","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport css from '../Form/Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={css.form} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}\r\n            className={css.input}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n            className={css.input}\r\n          />\r\n        </label>\r\n        <button className={css.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"../ContactsItem/ContactsItem.module.css\";\r\n\r\nconst ContactsItem = ({ name, number, id, onDeleteContact }) => (\r\n  <li className={css.item}>\r\n    <span>{name}: </span>\r\n    <span>{number} </span>\r\n    <span>\r\n      <button\r\n        className={css.item__button}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </span>\r\n  </li>\r\n);\r\n\r\nContactsItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsItem;\r\n","import PropTypes from \"prop-types\";\r\nimport ContactsItem from \"../ContactsItem/ContactsItem\";\r\nimport css from \"../ContactsList/ContactsList.module.css\";\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={css.list}>\r\n    {contacts.map((contact) => (\r\n      <ContactsItem\r\n        key={contact.id}\r\n        id={contact.id}\r\n        name={contact.name}\r\n        number={contact.number}\r\n        onDeleteContact={onDeleteContact}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array,\r\n};\r\n\r\nexport default ContactsList;\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"../ContactsFilter/ContactsFilter.module.css\";\r\n\r\nconst ContactsFilter = ({ value, onChange }) => (\r\n  <label className={css.filter__label}>\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nContactsFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsFilter;\r\n","import { Component } from 'react';\nimport shortid from 'shortid';\nimport Form from '../Form/Form';\nimport ContactsList from '../ContactsList/ContactsList';\nimport ContactsFilter from '../ContactsFilter/ContactsFilter';\n\nimport css from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = profile => {\n    const contact = {\n      id: shortid.generate(),\n      name: profile.name,\n      number: profile.number,\n    };\n\n    this.setState(prevState => {\n      const isRepeatName = prevState.contacts.find(\n        contact => contact.name.toLowerCase() === profile.name.toLowerCase(),\n      );\n\n      if (!isRepeatName) {\n        return {\n          contacts: [...prevState.contacts, contact],\n        };\n      }\n\n      alert(`${profile.name} is already in contacts`);\n      return { ...prevState };\n    });\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  onChangeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <div className={css.app}>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <ContactsFilter value={filter} onChange={this.onChangeFilter} />\n\n        <ContactsList\n          contacts={this.getFilteredContacts()}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/ContactsFilter/ContactsFilter.module.css","App.module.css","components/Form/Form.module.css","components/Form/Form.jsx","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.jsx","components/ContactsFilter/ContactsFilter.jsx","App.js","index.js","components/ContactsItem/ContactsItem.module.css"],"names":["module","exports","Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","contacts","find","contact","toLowerCase","alert","onSubmit","reset","className","css","form","this","type","pattern","title","required","onChange","id","input","button","Component","ContactsItem","onDeleteContact","item","item__name","item__number","item__button","onClick","ContactsList","list","map","ContactsFilter","filter__label","Phonebook","filter","addContact","profile","deleteContact","prevState","onChangeFilter","normalizedFilter","visibleFilter","includes","app","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.16b5c70e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3NRQ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"ContactsFilter_filter__label__2DkrA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3fITW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3AtpA\",\"input\":\"Form_input__2n_k0\",\"button\":\"Form_button__2GSyj\"};","import { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\n\r\nimport css from \"../Form/Form.module.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name } = this.state;\r\n    const isRepeatName = this.props.contacts.find(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n\r\n    isRepeatName\r\n      ? alert(`${name} is already in contacts`)\r\n      : this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={css.form} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}\r\n            className={css.input}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n            className={css.input}\r\n          />\r\n        </label>\r\n        <button className={css.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"../ContactsItem/ContactsItem.module.css\";\r\n\r\nconst ContactsItem = ({ name, number, id, onDeleteContact }) => (\r\n  <li className={css.item}>\r\n    <span className={css.item__name}>{name}: </span>\r\n    <span className={css.item__number}>{number} </span>\r\n    <span>\r\n      <button\r\n        className={css.item__button}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </span>\r\n  </li>\r\n);\r\n\r\nContactsItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n  id: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsItem;\r\n","import PropTypes from \"prop-types\";\r\nimport ContactsItem from \"../ContactsItem/ContactsItem\";\r\nimport css from \"../ContactsList/ContactsList.module.css\";\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={css.list}>\r\n    {contacts.map((contact) => (\r\n      <ContactsItem\r\n        key={contact.id}\r\n        id={contact.id}\r\n        name={contact.name}\r\n        number={contact.number}\r\n        onDeleteContact={onDeleteContact}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array,\r\n};\r\n\r\nexport default ContactsList;\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"../ContactsFilter/ContactsFilter.module.css\";\r\n\r\nconst ContactsFilter = ({ value, onChange }) => (\r\n  <label className={css.filter__label}>\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nContactsFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsFilter;\r\n","import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport Form from \"./components/Form/Form\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport ContactsFilter from \"./components/ContactsFilter/ContactsFilter\";\n\nimport css from \"./App.module.css\";\n\nclass Phonebook extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (profile) => {\n    const contact = {\n      id: shortid.generate(),\n      name: profile.name,\n      number: profile.number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }));\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  onChangeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    const visibleFilter = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    return (\n      <div className={css.app}>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addContact} contacts={contacts} />\n\n        <h2>Contacts</h2>\n        <ContactsFilter value={filter} onChange={this.onChangeFilter} />\n\n        <ContactsList\n          contacts={visibleFilter}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Phonebook;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__3IWol\",\"item__name\":\"ContactsItem_item__name__10g-7\",\"item__number\":\"ContactsItem_item__number__3TMZj\",\"item__button\":\"ContactsItem_item__button__LEiU_\"};"],"sourceRoot":""}